generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    project       Project[]
}

model Project {
    id          String     @id @default(auto()) @map("_id") @db.ObjectId
    user        User       @relation(fields: [userId], references: [id])
    userId      String     @db.ObjectId
    name        String
    description String
    image       String?
    categories  Category[]
    templates   Template[]
}

model Category {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    icon      String
    items     Item[]
    project   Project @relation(fields: [projectId], references: [id])
    projectId String  @db.ObjectId
}

model Template {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    project   Project @relation(fields: [projectId], references: [id])
    projectId String  @db.ObjectId
    fields    Field[]
}

model Item {
    id         String    @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    image      String?
    fields     Field[]
    category   Category? @relation(fields: [categoryId], references: [id])
    categoryId String?   @db.ObjectId
}

type Field {
    title String
    type  FieldType
    value FieldValue?
}

enum FieldType {
    text
    textarea
    source
}

type FieldValue {
    content  String?
    linkname String?
    url      String?
}
